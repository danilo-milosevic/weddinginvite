{"ast":null,"code":"var _jsxFileName = \"/Users/danilomilosevic/Documents/Danilo/threejs-invite/threejs-invite/src/components/simple_cube/cube.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotatingCube = ({\n  color = \"hotpink\",\n  speed = 0.01\n}) => {\n  _s();\n  const meshRef = useRef();\n\n  // This hook runs on every frame\n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x += speed;\n      meshRef.current.rotation.y += speed;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: color,\n      metalness: 0.3,\n      roughness: 0.4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(RotatingCube, \"/vg1AmA8+P3+Fj0/y210JTVKtL0=\", false, function () {\n  return [useFrame];\n});\n_c = RotatingCube;\nexport default RotatingCube;\nvar _c;\n$RefreshReg$(_c, \"RotatingCube\");","map":{"version":3,"names":["React","useRef","useFrame","jsxDEV","_jsxDEV","RotatingCube","color","speed","_s","meshRef","current","rotation","x","y","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","metalness","roughness","_c","$RefreshReg$"],"sources":["/Users/danilomilosevic/Documents/Danilo/threejs-invite/threejs-invite/src/components/simple_cube/cube.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst RotatingCube = ({ color = \"hotpink\", speed = 0.01 }) => {\n  const meshRef = useRef();\n  \n  // This hook runs on every frame\n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x += speed;\n      meshRef.current.rotation.y += speed;\n    }\n  });\n  \n  return (\n    <mesh ref={meshRef}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial \n        color={color} \n        metalness={0.3}\n        roughness={0.4}\n      />\n    </mesh>\n  );\n};\n\nexport default RotatingCube;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK,GAAG,SAAS;EAAEC,KAAK,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAMC,OAAO,GAAGR,MAAM,CAAC,CAAC;;EAExB;EACAC,QAAQ,CAAC,MAAM;IACb,IAAIO,OAAO,CAACC,OAAO,EAAE;MACnBD,OAAO,CAACC,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAIL,KAAK;MACnCE,OAAO,CAACC,OAAO,CAACC,QAAQ,CAACE,CAAC,IAAIN,KAAK;IACrC;EACF,CAAC,CAAC;EAEF,oBACEH,OAAA;IAAMU,GAAG,EAAEL,OAAQ;IAAAM,QAAA,gBACjBX,OAAA;MAAaY,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChChB,OAAA;MACEE,KAAK,EAAEA,KAAM;MACbe,SAAS,EAAE,GAAI;MACfC,SAAS,EAAE;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACZ,EAAA,CArBIH,YAAY;EAAA,QAIhBH,QAAQ;AAAA;AAAAqB,EAAA,GAJJlB,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}