{"ast":null,"code":"var _jsxFileName = \"/Users/danilomilosevic/Documents/Danilo/threejs-invite/threejs-invite/src/components/leaves/leaves.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useMemo } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\n// Individual floating leaf (cube)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloatingCube = ({\n  color,\n  size,\n  windDirection\n}) => {\n  _s();\n  const meshRef = useRef();\n  const clockRef = useRef(0);\n  const moveParams = useMemo(() => ({\n    rotationSpeedX: (Math.random() - 0.5) * 0.02,\n    rotationSpeedY: (Math.random() - 0.5) * 0.02,\n    rotationSpeedZ: (Math.random() - 0.5) * 0.02,\n    floatAmplitude: 0.5 + Math.random() * 1,\n    floatFrequency: 0.5 + Math.random() * 1.5,\n    swayAmplitude: 1 + Math.random() * 2,\n    fallSpeed: 0.5 + Math.random() * 0.3,\n    windX: -0.3 + Math.random() * -0.2,\n    windZ: -0.1 + Math.random() * 0.2,\n    startX: (Math.random() - 0.5) * 20 + 10,\n    startY: 10 + Math.random() * 5,\n    startZ: (Math.random() - 0.5) * 10\n  }), []);\n  useFrame((_, delta) => {\n    clockRef.current += delta;\n    if (meshRef.current) {\n      const t = clockRef.current;\n\n      // Update rotations\n      meshRef.current.rotation.x += moveParams.rotationSpeedX;\n      meshRef.current.rotation.y += moveParams.rotationSpeedY;\n      meshRef.current.rotation.z += moveParams.rotationSpeedZ;\n\n      // Calculate motion\n      const swayX = Math.sin(t * 1.5) * moveParams.swayAmplitude;\n      const floatY = Math.sin(t * moveParams.floatFrequency) * moveParams.floatAmplitude;\n      const fallY = -t * moveParams.fallSpeed;\n\n      // Apply position\n      meshRef.current.position.x = moveParams.startX + swayX + moveParams.windX * t;\n      meshRef.current.position.y = moveParams.startY + floatY + fallY;\n      meshRef.current.position.z = moveParams.startZ + moveParams.windZ * t;\n\n      // Reset if below threshold\n      if (meshRef.current.position.y < -10) {\n        clockRef.current = 0;\n        moveParams.startX = (Math.random() - 0.5) * 20 + 10;\n        moveParams.startY = 10 + Math.random() * 5;\n        moveParams.startZ = (Math.random() - 0.5) * 10;\n        moveParams.windX = -0.3 + Math.random() * -0.2;\n        moveParams.windZ = -0.1 + Math.random() * 0.2;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    position: [moveParams.startX, moveParams.startY, moveParams.startZ],\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [size, size, size]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: color,\n      transparent: true,\n      opacity: 0.8,\n      metalness: 0.3,\n      roughness: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n// Main component spawning multiple falling leaves\n_s(FloatingCube, \"/mIltD8kc/4e09I8TxyN0Pl1zMQ=\", false, function () {\n  return [useFrame];\n});\n_c = FloatingCube;\nconst FloatingLeaves = ({\n  count = 100\n}) => {\n  _s2();\n  const cubes = useMemo(() => {\n    const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#f9ca24', '#f0932b', '#eb4d4b', '#6c5ce7', '#a29bfe', '#fd79a8', '#fdcb6e', '#e17055', '#81ecec', '#74b9ff', '#55a3ff', '#00b894'];\n    return Array.from({\n      length: count\n    }, (_, i) => ({\n      id: i,\n      color: colors[Math.floor(Math.random() * colors.length)],\n      size: 0.1 + Math.random() * 0.3,\n      windDirection: {\n        x: -0.4,\n        // constant wind from top-right to bottom-left\n        y: -0.5,\n        z: 0\n      }\n    }));\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: cubes.map(cube => /*#__PURE__*/_jsxDEV(FloatingCube, {\n      color: cube.color,\n      size: cube.size,\n      windDirection: cube.windDirection\n    }, cube.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(FloatingLeaves, \"6HxRkQ4jLZBxyUVn9ESV0syz75I=\");\n_c2 = FloatingLeaves;\nexport default FloatingLeaves;\nvar _c, _c2;\n$RefreshReg$(_c, \"FloatingCube\");\n$RefreshReg$(_c2, \"FloatingLeaves\");","map":{"version":3,"names":["React","useRef","useMemo","useFrame","THREE","jsxDEV","_jsxDEV","FloatingCube","color","size","windDirection","_s","meshRef","clockRef","moveParams","rotationSpeedX","Math","random","rotationSpeedY","rotationSpeedZ","floatAmplitude","floatFrequency","swayAmplitude","fallSpeed","windX","windZ","startX","startY","startZ","_","delta","current","t","rotation","x","y","z","swayX","sin","floatY","fallY","position","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","transparent","opacity","metalness","roughness","_c","FloatingLeaves","count","_s2","cubes","colors","Array","from","length","i","id","floor","map","cube","_c2","$RefreshReg$"],"sources":["/Users/danilomilosevic/Documents/Danilo/threejs-invite/threejs-invite/src/components/leaves/leaves.js"],"sourcesContent":["import React, { useRef, useMemo } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\n// Individual floating leaf (cube)\nconst FloatingCube = ({ color, size, windDirection }) => {\n  const meshRef = useRef();\n  const clockRef = useRef(0);\n\n  const moveParams = useMemo(() => ({\n    rotationSpeedX: (Math.random() - 0.5) * 0.02,\n    rotationSpeedY: (Math.random() - 0.5) * 0.02,\n    rotationSpeedZ: (Math.random() - 0.5) * 0.02,\n    floatAmplitude: 0.5 + Math.random() * 1,\n    floatFrequency: 0.5 + Math.random() * 1.5,\n    swayAmplitude: 1 + Math.random() * 2,\n    fallSpeed: 0.5 + Math.random() * 0.3,\n    windX: -0.3 + Math.random() * -0.2,\n    windZ: -0.1 + Math.random() * 0.2,\n    startX: (Math.random() - 0.5) * 20 + 10,\n    startY: 10 + Math.random() * 5,\n    startZ: (Math.random() - 0.5) * 10,\n  }), []);\n\n  useFrame((_, delta) => {\n    clockRef.current += delta;\n\n    if (meshRef.current) {\n      const t = clockRef.current;\n\n      // Update rotations\n      meshRef.current.rotation.x += moveParams.rotationSpeedX;\n      meshRef.current.rotation.y += moveParams.rotationSpeedY;\n      meshRef.current.rotation.z += moveParams.rotationSpeedZ;\n\n      // Calculate motion\n      const swayX = Math.sin(t * 1.5) * moveParams.swayAmplitude;\n      const floatY = Math.sin(t * moveParams.floatFrequency) * moveParams.floatAmplitude;\n      const fallY = -t * moveParams.fallSpeed;\n\n      // Apply position\n      meshRef.current.position.x = moveParams.startX + swayX + moveParams.windX * t;\n      meshRef.current.position.y = moveParams.startY + floatY + fallY;\n      meshRef.current.position.z = moveParams.startZ + moveParams.windZ * t;\n\n      // Reset if below threshold\n      if (meshRef.current.position.y < -10) {\n        clockRef.current = 0;\n        moveParams.startX = (Math.random() - 0.5) * 20 + 10;\n        moveParams.startY = 10 + Math.random() * 5;\n        moveParams.startZ = (Math.random() - 0.5) * 10;\n        moveParams.windX = -0.3 + Math.random() * -0.2;\n        moveParams.windZ = -0.1 + Math.random() * 0.2;\n      }\n    }\n  });\n\n  return (\n    <mesh ref={meshRef} position={[moveParams.startX, moveParams.startY, moveParams.startZ]}>\n      <boxGeometry args={[size, size, size]} />\n      <meshStandardMaterial\n        color={color}\n        transparent={true}\n        opacity={0.8}\n        metalness={0.3}\n        roughness={0.5}\n      />\n    </mesh>\n  );\n};\n\n// Main component spawning multiple falling leaves\nconst FloatingLeaves = ({ count = 100 }) => {\n  const cubes = useMemo(() => {\n    const colors = [\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#f9ca24', '#f0932b',\n      '#eb4d4b', '#6c5ce7', '#a29bfe', '#fd79a8', '#fdcb6e',\n      '#e17055', '#81ecec', '#74b9ff', '#55a3ff', '#00b894'\n    ];\n    return Array.from({ length: count }, (_, i) => ({\n      id: i,\n      color: colors[Math.floor(Math.random() * colors.length)],\n      size: 0.1 + Math.random() * 0.3,\n      windDirection: {\n        x: -0.4, // constant wind from top-right to bottom-left\n        y: -0.5,\n        z: 0\n      }\n    }));\n  }, [count]);\n\n  return (\n    <group>\n      {cubes.map((cube) => (\n        <FloatingCube\n          key={cube.id}\n          color={cube.color}\n          size={cube.size}\n          windDirection={cube.windDirection}\n        />\n      ))}\n    </group>\n  );\n};\n\nexport default FloatingLeaves;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}